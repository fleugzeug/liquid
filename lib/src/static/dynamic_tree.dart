// Copyright (c) 2014, the Liquid project authors. Please see the AUTHORS file
// for details. All rights reserved. Use of this source code is governed by a
// BSD-style license that can be found in the LICENSE file.

part of liquid.static;

/// Dynamic Tree VDom Node generated by dynamic tree factory.
///
/// Dynamic tree nodes are simple stateless nodes with lazy subtree generation.
/// Subtree is created when `update()` or `render()` method is invoked.
///
/// Right now it doesn't provide any benefits compared to simple functions
/// that create virtual trees, but in the future, when we define rules
/// for `@property`-like annotations, it will work as an optimization technique.
abstract class VDynamicTree extends VStaticTree {
  VDynamicTree(
      Object key,
      List<vdom.VNode> children,
      String id,
      Map<String, String> attributes,
      List<String> classes,
      Map<String, String> styles)
      : super(key, children, id, attributes, classes, styles);

  void update(VStaticTree other, vdom.Context context) {
    super.update(other, context);
    other.vRoot = other.build();
    vRoot.update(other.vRoot, context);
  }
}
